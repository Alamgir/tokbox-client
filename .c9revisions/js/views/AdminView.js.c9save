{"ts":1369502849895,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var AdminView = Backbone.View.extend({\n    \n    attributes: {\n        \"style\" : \"height:100%\",\n        \"id\"    : \"admin_container\"\n    },\n\n    events : {\n        \"change .approve_switch\": \"approve_user\",\n        \"click #admin_save_button\": \"save_state\"\n    },\n\n    initialize: function() {\n        _.bindAll(this, 'render', \"approve_user\", \"save_state\");\n\n        this.$el.html(App.template.admin);\n        //$('#app').html(this.$el);\n    },\n\n    render: function() {\n        \n        \n        $('#app').html(this.$el);\n            \n        //The user is an admin or is approved            \n        if (App.user.admin) {\n            \n            // append each light to the admin_light_list\n            _.each(App.hue_data.lights, function(light) {\n                var light_html = App.template.admin_entity_light(light);\n                $('#admin_light_list').append(light_html);\n                   \n                _.each(App.admin_data.users, function(user) {\n                    var user_html = App.template.admin_entity_user(user);  \n                    var admin_users_list = $('.admin_light_entity #' + light.name + ' .admin_light_users_list');\n                    admin_users_list.append(user_html);\n                    \n                    //get the user's state with the light, set it in UI\n                    var approval_state = user.lights[light.id].approved;\n                    $('.user_entity_heading #' + user.username + ' .approve_switch').val(approval_state);\n                });\n            });\n            \n            //append each user to each light, also check the user's current approval with the light\n            \n        }\n        else {\n            //the user isn't an admin, get them the fuck out of here\n            AppRouter.navigate(\"home\", true);\n        }\n        \n        this.delegateEvents();    \n        \n        //************************ BEGIN NEW VIEW CODE HERE ************************************************\n        // add to initialize\n        /*\n        this.light_views = [];\n        \n        _.each(App.hue_data.lights, function(light) {\n           var light_view = new AdminLightEntityView({\n                                                        model : light,\n                                                        admin_light_list : $('#admin_light_list')\n                                                    });\n            this.light_views.push(light_view);\n            light_view.render();\n        });\n        */\n        \n        return this;\n    },\n    \n    approve_user: function(event) {\n        //uncollapse the element\n        var username = $(event.currentTarget).parent.attr(\"username\");\n        var light_id = $(event.currentTarget).closest('.light_entity_heading').attr(\"light_id\");\n        //what is the user's current state with this light?\n        var user = App.admin_data.users[username];\n        var light = user.lights[light_id];\n        \n        var current_approved_state = light.approved;\n        \n        var new_approved_state = $(event.currentTarget).val();\n        if (new_approved_state != current_approved_state) {\n            $.ajax({\n               type: \"PUT\",\n               url: 'http://localhost:8080/admin/approve_user',\n               data: JSON.stringify({\n                                    user_id: user.id, \n                                    light_id: light_id,\n                                    approved: new_approved_state\n                                    }),\n               dataType: 'json',\n               statusCode: {\n                   500 : function(jqXHR, textStatus, errorThrown) {\n                       Tokbox.alert({\n                           error: \"true\",\n                           title: \"Unsuccessful Operation\",\n                           message: \"Couldn't switch the light state\"\n                       });\n                       \n                       //Reset the slider\n                       $(event.currentTarget).val(current_approved_state);\n                   },\n                   200: function(data) {\n                       user.lights[light_id].approved = new_approved_state;\n                       \n                       var state_text = \"\";\n                       if (new_approved_state === true) {\n                           state_text = \"Approved\";\n                       }\n                       else {\n                           state_text = \"Denied\";\n                       }\n                       \n                       \n                       Tokbox.alert({\n                           error: \"success\",\n                           title: \"Successful Operation\",\n                           message: username + \" is now \" + state_text + \" from \" + light.name + \"!\"\n                       });\n                       \n                       //update the UI to show the light is on\n                   }\n               }\n            });\n        }\n        \n        $('#'+username+'_options').collapse('show');\n        \n        \n    }\n    \n    \n    \n});"]],"start1":0,"start2":0,"length1":0,"length2":4992}]],"length":4992}
{"contributors":[],"silentsave":true,"ts":1369546000988,"patch":[[{"diffs":[[0,"********"],[1,"***********"],[0," BEGIN N"]],"start1":1871,"start2":1871,"length1":16,"length2":27}]],"length":5003,"saved":false}
{"ts":1369546002618,"patch":[[{"diffs":[[0,"********"],[1,"******"],[0," BEGIN N"]],"start1":1882,"start2":1882,"length1":16,"length2":22}]],"length":5009,"saved":false}
{"ts":1369546003826,"patch":[[{"diffs":[[0,"********"],[1,"*"],[0," BEGIN N"]],"start1":1888,"start2":1888,"length1":16,"length2":17}]],"length":5010,"saved":false}
{"ts":1369546007430,"patch":[[{"diffs":[[0,"********"],[1,"*"],[0," BEGIN N"]],"start1":1889,"start2":1889,"length1":16,"length2":17}]],"length":5011,"saved":false}
